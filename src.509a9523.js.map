{"version":3,"sources":["js/task-3.js","index.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","Promise","ok","error","delay","setTimeout","id","logSuccess","time","console","log","logError","warn","amount","then","catch"],"mappings":";;;AAAA,MAAMA,EAA4B,CAACC,EAAKC,IAC/BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAGhDK,EAAkBC,GACf,IAAIC,QAAQ,CAACC,EAAIC,KAChBC,MAAAA,EAAQX,EAA0B,IAAK,KAE7CY,WAAW,KACUT,KAAKE,SAAW,GAGjCI,EAAG,CAACF,EAAYM,GAAIF,IAEpBD,EAAMH,EAAYM,KAEnBF,KAIDG,EAAa,EAAED,EAAIE,MACvBC,QAAQC,mBAAmBJ,kBAAmBE,QAG1CG,EAAWL,IACfG,QAAQG,qCAAqCN,+BAa/CP,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,MAAOC,KAAKP,GAAYQ,MAAMJ,GAEhEZ,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,MAAOC,KAAKP,GAAYQ,MAAMJ,GAEhEZ,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,KAAMC,KAAKP,GAAYQ,MAAMJ,GAE/DZ,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,MAAOC,KAAKP,GAAYQ,MAAMJ;;ACxChE,aAJA,QAAA,oBAIA,QAAA","file":"src.509a9523.js","sourceRoot":"../src","sourcesContent":["const randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = transaction => {\n  return new Promise((ok, error) => {\n    const delay = randomIntegerFromInterval(200, 500);\n\n    setTimeout(() => {\n      const canProcess = Math.random() > 0.3;\n\n      if (canProcess) {\n        ok([transaction.id, delay]);\n      } else {\n        error(transaction.id);\n      }\n    }, delay);\n  });\n};\n\nconst logSuccess = ([id, time]) => {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n/*\n * Работает так\n */\n/*  makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\n  makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\n  makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\n  makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);*/\n/*\n * Должно работать так\n */\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);\n","import './sass/main.scss';\n\n// import './js/task-1.js';\n// import './js/task-2.js';\nimport './js/task-3.js';\n"]}